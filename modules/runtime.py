from collections import deque
from debugger import DebugPrinter

# should probably really write this in C... would be less work..
# so this is supposed to read symbolic code generated by the compiler
# and execute the generated intermediate code via stack machine.

class VirtualRunTime:
    def __init__(self):
        self.v_stack = []
        self.v_data_seg = []
        self.debugger = DebugPrinter()

    def push(self, arg):
        pass

    def pop(self, arg):
        pass

    def op_add(self):
        pass

    def op_sub(self):
        pass
    
    def op_mult(self):
        pass





